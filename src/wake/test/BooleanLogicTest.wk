import Asserts;

every BooleanLogicTest is:

	Bool -- testNot(Asserts) {
		Asserts.that(!true)Equals(false);
		Asserts.that(!false)Equals(true);
		return Asserts.allPassed();
	}

	Bool -- testOr(Asserts) {
		Asserts.that(true  || true)Equals(true);
		Asserts.that(false || true)Equals(true);
		Asserts.that(true  || false)Equals(true);
		Asserts.that(false || false)Equals(false);
		return Asserts.allPassed();
	}

	Bool -- testAnd(Asserts) {
		Asserts.that(true  && true)Equals(true);
		Asserts.that(false && true)Equals(false);
		Asserts.that(true  && false)Equals(false);
		Asserts.that(false && false)Equals(false);
		return Asserts.allPassed();
	}

	Bool -- testOrderOfOperations(Asserts) {
		Asserts.that(true  && true  || false)Equals(true);
		Asserts.that(true  && false || false)Equals(false);
		Asserts.that(false && true  || false)Equals(false);
		Asserts.that(false && false || false)Equals(false);
		Asserts.that(true  && true  || true)Equals(true);
		Asserts.that(true  && false || true)Equals(true);
		Asserts.that(false && true  || true)Equals(true);
		Asserts.that(false && false || true)Equals(true);
		Asserts.that(true  || true  && false)Equals(true);
		Asserts.that(true  || false && false)Equals(true);
		Asserts.that(false || true  && false)Equals(false);
		Asserts.that(false || false && false)Equals(false);
		Asserts.that(true  || true  && true)Equals(true);
		Asserts.that(true  || false && true)Equals(true);
		Asserts.that(false || true  && true)Equals(true);
		Asserts.that(false || false && true)Equals(false);
		Asserts.that(!true  && true  )Equals(false);
		Asserts.that(true   && !true )Equals(false);
		Asserts.that(!true  && false )Equals(false);
		Asserts.that(true   && !false)Equals(true);
		Asserts.that(!false && true  )Equals(true);
		Asserts.that(false  && !true )Equals(false);
		Asserts.that(!false && false )Equals(false);
		Asserts.that(false  && !false)Equals(false);
		Asserts.that(!true  || true  )Equals(true);
		Asserts.that(true   || !true )Equals(true);
		Asserts.that(!true  || false )Equals(false);
		Asserts.that(true   || !false)Equals(true);
		Asserts.that(!false || true  )Equals(true);
		Asserts.that(false  || !true )Equals(false);
		Asserts.that(!false || false )Equals(true);
		Asserts.that(false  || !false)Equals(true);
		return Asserts.allPassed();
	}
