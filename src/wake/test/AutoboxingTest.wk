import Asserts;

every AutoboxingTest is:

	Bool -- testIntSquared(Asserts) {
		Asserts.that(5.squared())Equals(25);
		return Asserts.allPassed();
	}

	Bool -- testAbsoluteValue(Asserts) {
		Asserts.that(5.abs())Equals(5);
		Asserts.that(0.abs())Equals(0);
		Asserts.that(-3.abs())Equals(3);
		// TODO...NEGATIVES
		return Asserts.allPassed();
	}

	Bool -- testMaxOfInt(Asserts) {
		Asserts.that(5.orMaxOf(5))Equals(5);
		Asserts.that(5.orMaxOf(4))Equals(5);
		Asserts.that(5.orMaxOf(6))Equals(6);
		return Asserts.allPassed();
	}

	Bool -- testMaxOfInts(Asserts) {
		var Int[] = [];
		Int[0] = 5;
		Asserts.that(5.orMaxOf(Int))Equals(5);
		Int[1] = 4;
		Asserts.that(5.orMaxOf(Int))Equals(5);
		Int[2] = 6;
		Asserts.that(5.orMaxOf(Int))Equals(6);
		return Asserts.allPassed();
	}

	Bool -- testMinOfInt(Asserts) {
		Asserts.that(5.orMinOf(5))Equals(5);
		Asserts.that(5.orMinOf(4))Equals(4);
		Asserts.that(5.orMinOf(6))Equals(5);
		return Asserts.allPassed();
	}

	Bool -- testMinOfInts(Asserts) {
		var Int[] = [];
		Int[0] = 5;
		Asserts.that(5.orMinOf(Int))Equals(5);
		Int[1] = 4;
		Asserts.that(5.orMinOf(Int))Equals(4);
		Int[2] = 6;
		Asserts.that(5.orMinOf(Int))Equals(4);
		return Asserts.allPassed();
	}

	Bool -- testNumberOfDigits(Asserts) {
		Asserts.that(123.numberOfDigits())Equals(3);
		Asserts.that(1234.numberOfDigits())Equals(4);
		Asserts.that(12.numberOfDigits())Equals(2);
		Asserts.that(1.numberOfDigits())Equals(1);
		Asserts.that(0.numberOfDigits())Equals(1);
		return Asserts.allPassed();
	}

	Bool -- testToUpper(Asserts) {
		Asserts.that("blah".toUpper())Equals("BLAH");
		return Asserts.allPassed();
	}

	Bool -- testToLower(Asserts) {
		Asserts.that("BLAH".toLower())Equals("blah");
		return Asserts.allPassed();
	}

	Bool -- testSwitchCase(Asserts) {
		Asserts.that("BlAh".switchCase())Equals("bLaH");
		return Asserts.allPassed();
	}

	Bool -- testTrim(Asserts) {
		Asserts.that("    	 blah".trim())Equals("blah");
		Asserts.that(" blah".trim())Equals("blah");
		Asserts.that("blah ".trim())Equals("blah");
		Asserts.that("blah 		".trim())Equals("blah");
		Asserts.that(" blah ".trim())Equals("blah");
		Asserts.that("  	 blah 		 ".trim())Equals("blah");
		Asserts.that("blah".trim())Equals("blah");
		Asserts.that(" blah blah ".trim())Equals("blah blah");
		Asserts.that("blah blah".trim())Equals("blah blah");
		return Asserts.allPassed();
	}
