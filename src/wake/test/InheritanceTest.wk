import Printer;

import Asserts;
import InheritanceTestParent;
import InheritanceTestOverride;
import InheritanceTestFallthrough;
import InheritanceTestInterface;

every InheritanceTest is:

	provides
		InheritanceTestParent,
		InheritanceTestOverride,
		InheritanceTestFallthrough,
		InheritanceTestInterface,
		InheritanceTestParent{Override} <- InheritanceTestOverride,
		InheritanceTestParent{Fallthrough} <- InheritanceTestFallthrough,
		InheritanceTestParent{Interface} <- InheritanceTestInterface;

	needs Printer;

	Truth -- testParentGetsParentClassName(Asserts) {
		var InheritanceTestParent <- this;
		Asserts.that(InheritanceTestParent.getClassName())Equals("InheritanceTestParent");
		return Asserts.allPassed();
	}

	Truth -- testOverrideChildGetsChildClassName(Asserts) {
		var InheritanceTestOverride <- this;
		Asserts.that(InheritanceTestOverride.getClassName())Equals("InheritanceTestOverride");
		return Asserts.allPassed();
	}

	Truth -- testOverrideChildFromProviderGetsChildClassName(Asserts) {
		var InheritanceTestParent = :(InheritanceTestParent{Override} <- this);
		Asserts.that(InheritanceTestParent.getClassName())Equals("InheritanceTestOverride");
		return Asserts.allPassed();
	}

	Truth -- testOverrideChildAfterCastGetsChildClassName(Asserts) {
		var InheritanceTestParent = :(InheritanceTestOverride <- this);
		Asserts.that(InheritanceTestParent.getClassName())Equals("InheritanceTestOverride");
		return Asserts.allPassed();
	}

	Truth -- testFallthroughChildGetsChildClassName(Asserts) {
		var InheritanceTestFallthrough <- this;
		Asserts.that(InheritanceTestFallthrough.getClassName())Equals("InheritanceTestParent");
		return Asserts.allPassed();
	}

	Truth -- testFallthroughChildFromProviderGetsChildClassName(Asserts) {
		var InheritanceTestParent = :(InheritanceTestParent{Fallthrough} <- this);
		Asserts.that(InheritanceTestParent.getClassName())Equals("InheritanceTestParent");
		return Asserts.allPassed();
	}

	Truth -- testFallthroughChildAfterCastGetsChildClassName(Asserts) {
		var InheritanceTestParent = :(InheritanceTestFallthrough <- this);
		Asserts.that(InheritanceTestParent.getClassName())Equals("InheritanceTestParent");
		return Asserts.allPassed();
	}

	Truth -- testImplementingChildGetsChildClassName(Asserts) {
		var InheritanceTestInterface <- this;
		Asserts.that(InheritanceTestInterface.getClassName())Equals("InheritanceTestInterface");
		return Asserts.allPassed();
	}

	Truth -- testImplementingChildFromProviderGetsChildClassName(Asserts) {
		var InheritanceTestParent = :(InheritanceTestParent{Interface} <- this);
		Asserts.that(InheritanceTestParent.getClassName())Equals("InheritanceTestInterface");
		return Asserts.allPassed();
	}

	Truth -- testImplementingChildAfterCastGetsChildClassName(Asserts) {
		var InheritanceTestParent = :(InheritanceTestInterface <- this);
		Asserts.that(InheritanceTestParent.getClassName())Equals("InheritanceTestInterface");
		return Asserts.allPassed();
	}
